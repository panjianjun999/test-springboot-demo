package com.pan.example.testspringbootdemo.models;

import java.util.ArrayList;
import java.util.List;

public class TbfightserverconfigExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tbFightServerConfig
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tbFightServerConfig
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tbFightServerConfig
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbFightServerConfig
     *
     * @mbggenerated
     */
    public TbfightserverconfigExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbFightServerConfig
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbFightServerConfig
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbFightServerConfig
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbFightServerConfig
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbFightServerConfig
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbFightServerConfig
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbFightServerConfig
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbFightServerConfig
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbFightServerConfig
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbFightServerConfig
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tbFightServerConfig
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andAreaIdIsNull() {
            addCriterion("areaId is null");
            return (Criteria) this;
        }

        public Criteria andAreaIdIsNotNull() {
            addCriterion("areaId is not null");
            return (Criteria) this;
        }

        public Criteria andAreaIdEqualTo(Integer value) {
            addCriterion("areaId =", value, "areaId");
            return (Criteria) this;
        }

        public Criteria andAreaIdNotEqualTo(Integer value) {
            addCriterion("areaId <>", value, "areaId");
            return (Criteria) this;
        }

        public Criteria andAreaIdGreaterThan(Integer value) {
            addCriterion("areaId >", value, "areaId");
            return (Criteria) this;
        }

        public Criteria andAreaIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("areaId >=", value, "areaId");
            return (Criteria) this;
        }

        public Criteria andAreaIdLessThan(Integer value) {
            addCriterion("areaId <", value, "areaId");
            return (Criteria) this;
        }

        public Criteria andAreaIdLessThanOrEqualTo(Integer value) {
            addCriterion("areaId <=", value, "areaId");
            return (Criteria) this;
        }

        public Criteria andAreaIdIn(List<Integer> values) {
            addCriterion("areaId in", values, "areaId");
            return (Criteria) this;
        }

        public Criteria andAreaIdNotIn(List<Integer> values) {
            addCriterion("areaId not in", values, "areaId");
            return (Criteria) this;
        }

        public Criteria andAreaIdBetween(Integer value1, Integer value2) {
            addCriterion("areaId between", value1, value2, "areaId");
            return (Criteria) this;
        }

        public Criteria andAreaIdNotBetween(Integer value1, Integer value2) {
            addCriterion("areaId not between", value1, value2, "areaId");
            return (Criteria) this;
        }

        public Criteria andLoaclIpIsNull() {
            addCriterion("loaclIp is null");
            return (Criteria) this;
        }

        public Criteria andLoaclIpIsNotNull() {
            addCriterion("loaclIp is not null");
            return (Criteria) this;
        }

        public Criteria andLoaclIpEqualTo(String value) {
            addCriterion("loaclIp =", value, "loaclIp");
            return (Criteria) this;
        }

        public Criteria andLoaclIpNotEqualTo(String value) {
            addCriterion("loaclIp <>", value, "loaclIp");
            return (Criteria) this;
        }

        public Criteria andLoaclIpGreaterThan(String value) {
            addCriterion("loaclIp >", value, "loaclIp");
            return (Criteria) this;
        }

        public Criteria andLoaclIpGreaterThanOrEqualTo(String value) {
            addCriterion("loaclIp >=", value, "loaclIp");
            return (Criteria) this;
        }

        public Criteria andLoaclIpLessThan(String value) {
            addCriterion("loaclIp <", value, "loaclIp");
            return (Criteria) this;
        }

        public Criteria andLoaclIpLessThanOrEqualTo(String value) {
            addCriterion("loaclIp <=", value, "loaclIp");
            return (Criteria) this;
        }

        public Criteria andLoaclIpLike(String value) {
            addCriterion("loaclIp like", value, "loaclIp");
            return (Criteria) this;
        }

        public Criteria andLoaclIpNotLike(String value) {
            addCriterion("loaclIp not like", value, "loaclIp");
            return (Criteria) this;
        }

        public Criteria andLoaclIpIn(List<String> values) {
            addCriterion("loaclIp in", values, "loaclIp");
            return (Criteria) this;
        }

        public Criteria andLoaclIpNotIn(List<String> values) {
            addCriterion("loaclIp not in", values, "loaclIp");
            return (Criteria) this;
        }

        public Criteria andLoaclIpBetween(String value1, String value2) {
            addCriterion("loaclIp between", value1, value2, "loaclIp");
            return (Criteria) this;
        }

        public Criteria andLoaclIpNotBetween(String value1, String value2) {
            addCriterion("loaclIp not between", value1, value2, "loaclIp");
            return (Criteria) this;
        }

        public Criteria andIpIsNull() {
            addCriterion("ip is null");
            return (Criteria) this;
        }

        public Criteria andIpIsNotNull() {
            addCriterion("ip is not null");
            return (Criteria) this;
        }

        public Criteria andIpEqualTo(String value) {
            addCriterion("ip =", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpNotEqualTo(String value) {
            addCriterion("ip <>", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpGreaterThan(String value) {
            addCriterion("ip >", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpGreaterThanOrEqualTo(String value) {
            addCriterion("ip >=", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpLessThan(String value) {
            addCriterion("ip <", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpLessThanOrEqualTo(String value) {
            addCriterion("ip <=", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpLike(String value) {
            addCriterion("ip like", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpNotLike(String value) {
            addCriterion("ip not like", value, "ip");
            return (Criteria) this;
        }

        public Criteria andIpIn(List<String> values) {
            addCriterion("ip in", values, "ip");
            return (Criteria) this;
        }

        public Criteria andIpNotIn(List<String> values) {
            addCriterion("ip not in", values, "ip");
            return (Criteria) this;
        }

        public Criteria andIpBetween(String value1, String value2) {
            addCriterion("ip between", value1, value2, "ip");
            return (Criteria) this;
        }

        public Criteria andIpNotBetween(String value1, String value2) {
            addCriterion("ip not between", value1, value2, "ip");
            return (Criteria) this;
        }

        public Criteria andFightRmiPortIsNull() {
            addCriterion("fightRmiPort is null");
            return (Criteria) this;
        }

        public Criteria andFightRmiPortIsNotNull() {
            addCriterion("fightRmiPort is not null");
            return (Criteria) this;
        }

        public Criteria andFightRmiPortEqualTo(Integer value) {
            addCriterion("fightRmiPort =", value, "fightRmiPort");
            return (Criteria) this;
        }

        public Criteria andFightRmiPortNotEqualTo(Integer value) {
            addCriterion("fightRmiPort <>", value, "fightRmiPort");
            return (Criteria) this;
        }

        public Criteria andFightRmiPortGreaterThan(Integer value) {
            addCriterion("fightRmiPort >", value, "fightRmiPort");
            return (Criteria) this;
        }

        public Criteria andFightRmiPortGreaterThanOrEqualTo(Integer value) {
            addCriterion("fightRmiPort >=", value, "fightRmiPort");
            return (Criteria) this;
        }

        public Criteria andFightRmiPortLessThan(Integer value) {
            addCriterion("fightRmiPort <", value, "fightRmiPort");
            return (Criteria) this;
        }

        public Criteria andFightRmiPortLessThanOrEqualTo(Integer value) {
            addCriterion("fightRmiPort <=", value, "fightRmiPort");
            return (Criteria) this;
        }

        public Criteria andFightRmiPortIn(List<Integer> values) {
            addCriterion("fightRmiPort in", values, "fightRmiPort");
            return (Criteria) this;
        }

        public Criteria andFightRmiPortNotIn(List<Integer> values) {
            addCriterion("fightRmiPort not in", values, "fightRmiPort");
            return (Criteria) this;
        }

        public Criteria andFightRmiPortBetween(Integer value1, Integer value2) {
            addCriterion("fightRmiPort between", value1, value2, "fightRmiPort");
            return (Criteria) this;
        }

        public Criteria andFightRmiPortNotBetween(Integer value1, Integer value2) {
            addCriterion("fightRmiPort not between", value1, value2, "fightRmiPort");
            return (Criteria) this;
        }

        public Criteria andFightUdpPortIsNull() {
            addCriterion("fightUdpPort is null");
            return (Criteria) this;
        }

        public Criteria andFightUdpPortIsNotNull() {
            addCriterion("fightUdpPort is not null");
            return (Criteria) this;
        }

        public Criteria andFightUdpPortEqualTo(Integer value) {
            addCriterion("fightUdpPort =", value, "fightUdpPort");
            return (Criteria) this;
        }

        public Criteria andFightUdpPortNotEqualTo(Integer value) {
            addCriterion("fightUdpPort <>", value, "fightUdpPort");
            return (Criteria) this;
        }

        public Criteria andFightUdpPortGreaterThan(Integer value) {
            addCriterion("fightUdpPort >", value, "fightUdpPort");
            return (Criteria) this;
        }

        public Criteria andFightUdpPortGreaterThanOrEqualTo(Integer value) {
            addCriterion("fightUdpPort >=", value, "fightUdpPort");
            return (Criteria) this;
        }

        public Criteria andFightUdpPortLessThan(Integer value) {
            addCriterion("fightUdpPort <", value, "fightUdpPort");
            return (Criteria) this;
        }

        public Criteria andFightUdpPortLessThanOrEqualTo(Integer value) {
            addCriterion("fightUdpPort <=", value, "fightUdpPort");
            return (Criteria) this;
        }

        public Criteria andFightUdpPortIn(List<Integer> values) {
            addCriterion("fightUdpPort in", values, "fightUdpPort");
            return (Criteria) this;
        }

        public Criteria andFightUdpPortNotIn(List<Integer> values) {
            addCriterion("fightUdpPort not in", values, "fightUdpPort");
            return (Criteria) this;
        }

        public Criteria andFightUdpPortBetween(Integer value1, Integer value2) {
            addCriterion("fightUdpPort between", value1, value2, "fightUdpPort");
            return (Criteria) this;
        }

        public Criteria andFightUdpPortNotBetween(Integer value1, Integer value2) {
            addCriterion("fightUdpPort not between", value1, value2, "fightUdpPort");
            return (Criteria) this;
        }

        public Criteria andDomainIsNull() {
            addCriterion("`domain` is null");
            return (Criteria) this;
        }

        public Criteria andDomainIsNotNull() {
            addCriterion("`domain` is not null");
            return (Criteria) this;
        }

        public Criteria andDomainEqualTo(String value) {
            addCriterion("`domain` =", value, "domain");
            return (Criteria) this;
        }

        public Criteria andDomainNotEqualTo(String value) {
            addCriterion("`domain` <>", value, "domain");
            return (Criteria) this;
        }

        public Criteria andDomainGreaterThan(String value) {
            addCriterion("`domain` >", value, "domain");
            return (Criteria) this;
        }

        public Criteria andDomainGreaterThanOrEqualTo(String value) {
            addCriterion("`domain` >=", value, "domain");
            return (Criteria) this;
        }

        public Criteria andDomainLessThan(String value) {
            addCriterion("`domain` <", value, "domain");
            return (Criteria) this;
        }

        public Criteria andDomainLessThanOrEqualTo(String value) {
            addCriterion("`domain` <=", value, "domain");
            return (Criteria) this;
        }

        public Criteria andDomainLike(String value) {
            addCriterion("`domain` like", value, "domain");
            return (Criteria) this;
        }

        public Criteria andDomainNotLike(String value) {
            addCriterion("`domain` not like", value, "domain");
            return (Criteria) this;
        }

        public Criteria andDomainIn(List<String> values) {
            addCriterion("`domain` in", values, "domain");
            return (Criteria) this;
        }

        public Criteria andDomainNotIn(List<String> values) {
            addCriterion("`domain` not in", values, "domain");
            return (Criteria) this;
        }

        public Criteria andDomainBetween(String value1, String value2) {
            addCriterion("`domain` between", value1, value2, "domain");
            return (Criteria) this;
        }

        public Criteria andDomainNotBetween(String value1, String value2) {
            addCriterion("`domain` not between", value1, value2, "domain");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tbFightServerConfig
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tbFightServerConfig
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}